#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -euo pipefail

build_dir=$1
cache_dir=$2
env_dir=$3
bp_dir=$(dirname $(dirname $0))

cat <<'EOF'
       ## WARNING: `heroku-buildpack-static` is deprecated

       This buildpack is deprecated and is no longer being maintained.
       If you are using this project, you can transition over to NGINX via an NGINX buildpack.
       Use your project's existing configuration.
       To find the NGINX configuration generated by the heroku-buildpack-static you can run:

       ```
       $ heroku run bash
       ~ $ bin/config/make-config
       ~ $ cat config/nginx.conf
       ```

       These commands will output your current NGINX config generated from your `static.json` contents.

       - Write these contents to your local repo at `config/nginx.conf.erb`, commit them to git.
       - Replace path logic that previously used `mruby` with static logic.
       - Configure your app to use the NGINX buildpack via `heroku buildpacks:add heroku-community/nginx`.
       - Remove this buildpack via `heroku buildpacks:remove https://github.com/heroku/heroku-buildpack-static`

EOF

case "${STACK}" in
  heroku-18|heroku-20)
    nginx_archive_url="https://heroku-buildpack-static.s3.amazonaws.com/${STACK}/nginx-1.21.3-ngx_mruby-2.2.4.tgz"
    ;;
  *)
    echo "Stack ${STACK} is not supported!"
    exit 1
    ;;
esac

mkdir -p $build_dir/bin
curl -sSf --retry 3 --connect-timeout 3 "${nginx_archive_url}" | tar -xzC "${build_dir}/bin"
nginx_version=$("${build_dir}/bin/nginx" -v |& cut -d '/' -f 2-)
cp -a $bp_dir/scripts/{boot,config} -t $build_dir/bin/
echo "-----> Installed nginx ${nginx_version} to /app/bin"

mkdir -p $build_dir/config
cp $bp_dir/scripts/config/templates/mime.types $build_dir/config

mkdir -p $build_dir/logs
